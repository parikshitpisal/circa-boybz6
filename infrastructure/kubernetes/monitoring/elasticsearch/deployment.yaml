apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: monitoring
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/part-of: monitoring
    app.kubernetes.io/component: database
    app.kubernetes.io/version: "8.0"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9200"
    prometheus.io/path: "/_prometheus/metrics"
spec:
  replicas: 3
  serviceName: elasticsearch
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/part-of: monitoring
        app.kubernetes.io/component: database
        app.kubernetes.io/version: "8.0"
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: elasticsearch
      initContainers:
        - name: fix-permissions
          image: busybox:1.35
          command:
            - sh
            - -c
            - chown -R 1000:1000 /usr/share/elasticsearch/data
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /usr/share/elasticsearch/data
        - name: increase-vm-max-map
          image: busybox:1.35
          command:
            - sysctl
            - -w
            - vm.max_map_count=262144
          securityContext:
            privileged: true
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:8.0
          ports:
            - containerPort: 9200
              name: http
              protocol: TCP
            - containerPort: 9300
              name: transport
              protocol: TCP
          env:
            - name: cluster.name
              value: monitoring-cluster
            - name: discovery.type
              value: kubernetes
            - name: discovery.seed_hosts
              value: elasticsearch-0.elasticsearch.monitoring.svc.cluster.local,elasticsearch-1.elasticsearch.monitoring.svc.cluster.local,elasticsearch-2.elasticsearch.monitoring.svc.cluster.local
            - name: cluster.initial_master_nodes
              value: elasticsearch-0,elasticsearch-1,elasticsearch-2
            - name: ES_JAVA_OPTS
              value: "-Xms4g -Xmx4g -XX:+UseG1GC -XX:MaxGCPauseMillis=200"
            - name: xpack.security.enabled
              value: "true"
            - name: xpack.monitoring.collection.enabled
              value: "true"
          resources:
            requests:
              cpu: "1"
              memory: 4Gi
            limits:
              cpu: "2"
              memory: 8Gi
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /usr/share/elasticsearch/data
          readinessProbe:
            httpGet:
              path: /_cluster/health
              port: 9200
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /_cluster/health
              port: 9200
            initialDelaySeconds: 60
            periodSeconds: 20
  volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        storageClassName: standard