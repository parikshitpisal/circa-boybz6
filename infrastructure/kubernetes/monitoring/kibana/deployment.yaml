apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/part-of: monitoring
    app.kubernetes.io/component: visualization
    app.kubernetes.io/version: "8.0"
    app.kubernetes.io/managed-by: kubernetes
    app.kubernetes.io/created-by: deployment
  annotations:
    kubernetes.io/description: "Kibana visualization platform for log analysis"
    prometheus.io/scrape: "true"
    prometheus.io/port: "5601"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kibana
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kibana
        app.kubernetes.io/part-of: monitoring
        app.kubernetes.io/component: visualization
        app.kubernetes.io/version: "8.0"
      annotations:
        co.elastic.logs/enabled: "true"
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 5601
          protocol: TCP
        env:
        - name: ELASTICSEARCH_HOSTS
          value: "http://elasticsearch:9200"
        - name: SERVER_NAME
          value: "kibana.monitoring.svc.cluster.local"
        - name: ELASTICSEARCH_SERVICEACCOUNTTOKEN
          valueFrom:
            secretKeyRef:
              name: kibana-elasticsearch-credentials
              key: token
        - name: LOGGING_VERBOSE
          value: "true"
        - name: NODE_OPTIONS
          value: "--max-old-space-size=1800"
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
        livenessProbe:
          httpGet:
            path: /api/status
            port: http
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/status
            port: http
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/status
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 30
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - kibana
              topologyKey: kubernetes.io/hostname