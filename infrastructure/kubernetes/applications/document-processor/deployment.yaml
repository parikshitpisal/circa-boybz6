apiVersion: apps/v1
kind: Deployment
metadata:
  name: document-processor
  namespace: ai-application-intake
  labels:
    app.kubernetes.io/name: document-processor
    app.kubernetes.io/part-of: application-processing
    app.kubernetes.io/component: processor
spec:
  # Start with 3 replicas for high availability
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: document-processor
  # Configure rolling updates for zero-downtime deployments
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: document-processor
        app.kubernetes.io/part-of: application-processing
        app.kubernetes.io/component: processor
    spec:
      # Use dedicated service account for pod authentication
      serviceAccountName: document-processor-sa
      containers:
        - name: document-processor
          image: ${ECR_REGISTRY}/document-processor:${IMAGE_TAG}
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              protocol: TCP
          # Resource requests and limits based on c6i.2xlarge specifications
          resources:
            requests:
              cpu: "2000m"    # 2 vCPU cores
              memory: "4Gi"   # 4GB RAM
            limits:
              cpu: "4000m"    # 4 vCPU cores max
              memory: "8Gi"   # 8GB RAM max
          # Load configuration and secrets from referenced ConfigMap and Secret
          envFrom:
            - configMapRef:
                name: document-processor-config
            - secretRef:
                name: document-processor-secrets
          # Health check configuration
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /ready
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 10
      # Configure pod anti-affinity to spread replicas across nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - document-processor
                topologyKey: kubernetes.io/hostname